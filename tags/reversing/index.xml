<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>reversing - Tag - CUEH ComSec</title><link>https://cov-comsec.github.io/tags/reversing/</link><description>reversing - Tag - CUEH ComSec</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Thu, 28 Oct 2021 12:40:28 +0100</lastBuildDate><atom:link href="https://cov-comsec.github.io/tags/reversing/" rel="self" type="application/rss+xml"/><item><title>Reverse Engineering Basics</title><link>https://cov-comsec.github.io/posts/2021_reverse_engineering/</link><pubDate>Thu, 28 Oct 2021 12:40:28 +0100</pubDate><author>Author</author><guid>https://cov-comsec.github.io/posts/2021_reverse_engineering/</guid><description>The session at ComSec this week went into some basic reverse engineering methods. Ben did a demo with some challenges, and then we released some CTF challenges to solve.
Credential Leak via Memory Inspection The first demo showed how we can use a decompiler to understand how a binary functions, and then use a debugger to inspect memory at runtime in order to find credentials. You can download the demo binary here.</description></item></channel></rss>